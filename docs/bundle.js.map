{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/main.ts"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","window.onload = function () {\n\n  let mainInputVal = <HTMLInputElement>document.getElementById(\"main-input\");\n  let itemCount = 0;\n  let ol = document.querySelector(\".item-list\");\n\n  interface Itemp {\n    todo: String;\n    check: Boolean;\n  }  \n\n  let arrItems: Array<Itemp> = [];\n\n  if (localStorage.getItem(\"todo\") !== undefined) {\n    arrItems = JSON.parse(localStorage.getItem(\"todo\")) || [];\n    outItems();\n  }\n\n\n  document.getElementById(\"btn-ok\").onclick = function () {\n    if (mainInputVal.value === \"\") {\n      mainInputVal.style.borderColor = \"red\";\n      return;\n    }\n    mainInputVal.style.borderColor = \"\";\n    addTask(mainInputVal.value);\n    mainInputVal.value = \"\";\n    outItems();\n    initButtons();\n  }\n  mainInputVal.onkeydown = function (event) {\n    if (event.keyCode === 13) {\n      document.getElementById(\"btn-ok\").click();\n    }\n  }\n  // Добавляем информацию об айтеме в массив, массив отправляем в LocalStorage \n  function addTask(text: String) {\n    itemCount++;\n    var temp: Itemp = {\n      todo: text,\n      check: false\n    }\n    arrItems.push(temp);\n    localStorage.setItem(\"todo\", JSON.stringify(arrItems));\n  }\n  // Вывод/обновление списка айтемов\n  function outItems() {\n    let fragment = document.createDocumentFragment();\n    let i = 0;\n    // Формирование и заполнение айтема\n    for (let key in arrItems) {\n      let checked: String = \"\";\n      if (arrItems[key].check) {\n        checked = \" checked='checked'\";\n      } else {\n        checked = \"\";\n      }\n      i++;\n      let itemList = document.createElement(\"li\");\n      itemList.classList.add(\"item\");\n      itemList.innerHTML =\n        `<input type=\"checkbox\" id=\"item-${i}\" ${checked}>\n        <label for=\"item-${i}\">${arrItems[key].todo}</label>\n        <button id=\"btn-save\"></button>\n        <div class=\"buttons\">\n          <button id=\"btn-delete\"></button>\n          <button id=\"btn-edit\"></button>\n        </div>`;\n      fragment.appendChild(itemList);\n    }\n    ol.innerHTML = '';\n    ol.appendChild(fragment);\n    initButtons();\n    checkCondition();\n  }\n  // Инициализация обработчиков кнопок существующих айтемов\n  function initButtons() {\n    let items = document.querySelectorAll(\"li.item\");\n    for (let i = 0; i < items.length; i++) {\n      (items[i].querySelector(\"#btn-delete\") as HTMLElement).onclick = deleteItem;\n      (items[i].querySelector(\"#btn-edit\") as HTMLElement).onclick = editItem;\n    }\n\n    function deleteItem() {\n      this.parentElement.parentElement.remove();\n      let thisInputNumber = this.parentElement.parentElement.querySelector(\"input\").id.slice(-1);\n\n      deleteFromArr(arrItems, Number(thisInputNumber) - 1);\n      localStorage.setItem(\"todo\", JSON.stringify(arrItems));\n      outItems();\n\n      function deleteFromArr(arr: Array<Itemp>, number: number) {\n        return arr.splice(number, 1)\n      }\n    }\n\n    function editItem() {\n      let input = this.parentElement.parentElement.querySelector(\"input\");\n      let thisInputNumber = input.id.slice(-1);\n      let label = this.parentElement.parentElement.querySelector(\"label\");\n      let btnSave = this.parentElement.parentElement.querySelector(\"#btn-save\");\n\n      btnSave.style.display = \"inline\";\n      let btnRed = this;\n      btnRed.style.display = \"none\";\n\n      btnSave.onclick = function () {\n        if (!input.value) {\n          input.value = label.innerText;\n        }\n        label.innerText = input.value;\n        label.style.display = \"inline\"; \n        input.setAttribute(\"type\", \"checkbox\");\n        input.classList.remove(\"edit-input\");        \n        btnSave.style.display = \"none\";\n        btnRed.style.display = \"\";\n        changeItem(arrItems, Number(thisInputNumber) - 1, input.value);\n        localStorage.setItem(\"todo\", JSON.stringify(arrItems));\n      }\n      input.setAttribute(\"type\", \"text\");\n      input.value = label.innerText;\n      input.classList.add(\"edit-input\");\n      label.style.display = \"none\";        \n      \n\n      function changeItem(arr: Array<Itemp>, number: number, str: String) {\n        return arr[number].todo = str;\n      }\n    }\n  }\n  // Инициализация проверки состояния айтема\n  function checkCondition() {\n    let itemsInList = document.querySelectorAll(\"li.item > input[type='checkbox']\");\n\n    for (let i = 0; i < itemsInList.length; i++) {\n      (itemsInList[i] as HTMLInputElement).onclick = function () {\n        let input = this;\n        let thisInputNumber = input.id.slice(-1);\n\n        if ((input as HTMLInputElement).type === \"text\") {\n          console.log(\"это текстовое поле\");\n          return false;\n        }\n\n        if (input.hasAttribute(\"checked\")) {\n          input.removeAttribute(\"checked\");\n          changeItemCheck(arrItems, Number(thisInputNumber) - 1, false);\n          localStorage.setItem(\"todo\", JSON.stringify(arrItems));\n        } else {\n          input.setAttribute(\"checked\", \"checked\");\n          changeItemCheck(arrItems, Number(thisInputNumber) - 1, true);\n          localStorage.setItem(\"todo\", JSON.stringify(arrItems));\n        }\n      }\n\n      function changeItemCheck(arr: Array<Itemp>, number: number, bool: Boolean) {\n        arr[number].check = bool;\n      }\n    }\n  }\n  // Инициализация кнопки очистки списка из LocalStorage\n  document.getElementById(\"btn-clear\").onclick = function () {\n    localStorage.clear();\n    ol.innerHTML = \"\";\n    itemCount = 0;\n    arrItems = [];\n  }\n\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}